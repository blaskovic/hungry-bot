#!/bin/bash
echo "Na Purkynce"
TODAY=$(LC=C date "+%A")
BEG_PATTERN="<br \/>"
END_PATTERN="<end>"

case "$TODAY" in
Monday)
    BEG_PATTERN="<pre>"
    TODAY_CZ="PONDĚLÍ"
    ;;
Tuesday)
    TODAY_CZ="ÚTERÝ"
    ;;
Wednesday)
    TODAY_CZ="STŘEDA"
    ;;
Thursday)
    TODAY_CZ="ČTVRTEK"
    ;;
Friday)
    END_PATTERN="<\/pre>"
    TODAY_CZ="PÁTEK"
    ;;
*)
    echo "Dnes je $TODAY, neni menu alebo je nieco spatne."
    rm -rf "$tmp"
    exit 0
esac

#PATTERN="/$BEG_PATTERN$TODAY_CZ/,/$END_PATTERN/"
#curl -s http://www.napurkynce.cz/denni-menu/ | sed 's/<br \/><br \/>/<end>\n<br \/>/g' | awk "$PATTERN" | sed 's/^<br \/>//' | sed 's/<br \/>/\n/g' | sed 's/<[^>]*>//g'
TMPFILE="purkynka.out"
curl -s http://www.napurkynce.cz/denni-menu/ > $TMPFILE

awk -v day=$TODAY_CZ '
function linecount(file) {
    if(file == " ")
        exit 1;

    "wc -l " file | getline out
    split(out, s, " ");
    return s[1];
}
BEGIN {
    rs_bak = RS;

    # Template 1
    t["template1"]["begrx"] = "<div>("day":.+?)</div>";
    t["template1"]["midrx"] = "<div>(<span>)?([a-z]\\).[^<]+)(</span>)?</div>";
    t["template1"]["endrx"] = "(<div>&nbsp;|<pre>.*</pre>)";
    t["template1"]["begidx"] = 1;
    t["template1"]["mididx"] = 2;

    # Template 2
    t["template2"]["RS"] ="<br />";
    t["template2"]["begrx"] = "(<pre>)?("day":.+?)";
    t["template2"]["midrx"] = "^([a-z]\\).[^<]+)";
    t["template2"]["endrx"] = "^$"
    t["template2"]["begidx"] = 2;
    t["template2"]["mididx"] = 1;

    maxtp = length(t);
    tpid = 1;
}
FNR == 1 {
    lc = linecount(ARGV[1]);
    idx = 0;
    lf = 0;
    out = 0;

    # Selected template
    ctp = "template" tpid;

    if(!(ctp in t)) {
        print "Invalid template: " ctp;
        exit 1;
    }

    if("RS" in t[ctp])
        RS = t[ctp]["RS"];
    else
        RS = rs_bak;
}
match($0, t[ctp]["begrx"], m) {
    res[idx++] = m[t[ctp]["begidx"]];
    lf = 1;
}
match($0, t[ctp]["midrx"], m) {
    res[idx++] = m[t[ctp]["mididx"]];
}
match($0, t[ctp]["endrx"]) {
    if(lf == 1) {
        out = 1;
        for(i in res) {
            # Limit output to 7 lines
            if(i >= 7) break;
            print res[i];
        }
        exit 0;
    }

    delete res;
    lf = 0;
    idx = 0;
}
FNR == lc {
    # EOF
    # We tried all templates -> error
    if(tpid == maxtp)
        exit 1;

    # Set current file as next argument
    for(i = ARGC; i > ARGIND; i--)
        ARGV[i] = ARGV[i - 1];

    ARGC++;
    ARGV[ARGIND + 1] = FILENAME;

    # Switch to next template
    tpid++;

    delete res;

    nextfile;
}
END {
    if(out == 0) {
        print "No matching template";
        exit 1;
    }
}' $TMPFILE

rm $TMPFILE
